{
  "openapi": "3.0.1",
  "info": {
    "title": "CarShop API",
    "description": "Online marketplace for used cars.",
    "version": "v2"
  },
  "paths": {
    "/carshop/v2/cars": {
      "get": {
        "tags": [
          "Cars"
        ],
        "summary": "Get all cars",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CarDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/carshop/v2/cars/{id}": {
      "get": {
        "tags": [
          "Cars"
        ],
        "summary": "Get car by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique id of the car to be search for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CarDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          }
        }
      }
    },
    "/carshop/v2/people/{personId}/cars": {
      "post": {
        "tags": [
          "Cars"
        ],
        "summary": "Create a new car for a given person",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Unique id of the given person",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "CarDto of the new car's data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CarDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CarDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CarDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Cars"
        ],
        "summary": "Get all cars of a given person",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Unique id for the given person",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CarDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          }
        }
      }
    },
    "/carshop/v2/people/{personId}/cars/{id}": {
      "put": {
        "tags": [
          "Cars"
        ],
        "summary": "Update a car for a given person",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Unique id for the given person",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique id for the car to be updated",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "CarDto of the updated car's data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CarDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CarDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CarDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Cars"
        ],
        "summary": "Delete a car for a given person",
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Unique id for the given person",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Unique id for the given car",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": { }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          }
        }
      }
    },
    "/carshop/v2/cars/attributes": {
      "get": {
        "tags": [
          "Cars"
        ],
        "summary": "Get cars by attributes",
        "parameters": [
          {
            "name": "maker",
            "in": "header",
            "description": "maker of the car to be search for (can be null)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "model",
            "in": "header",
            "description": "model of the car to be search for (can be null)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "yearMin",
            "in": "header",
            "description": "year >= yearMin of the car to be search for (can be null)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "yearMax",
            "in": "header",
            "description": "year <= yearMax of the car to be search for (can be null)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "priceMin",
            "in": "header",
            "description": "price >= priceMin of the car to be search for (can be null)",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "priceMax",
            "in": "header",
            "description": "price <= priceMax of the car to be search for (can be null)",
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CarDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/carshop/v2/people": {
      "get": {
        "tags": [
          "People"
        ],
        "summary": "Get all people",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          }
        }
      },
      "post": {
        "tags": [
          "People"
        ],
        "summary": "Create a new person",
        "requestBody": {
          "description": "PersonDto with the new person's data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PersonDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          }
        }
      }
    },
    "/carshop/v2/people/{id}": {
      "get": {
        "tags": [
          "People"
        ],
        "summary": "Get person by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique id of the person to be found",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          }
        }
      },
      "put": {
        "tags": [
          "People"
        ],
        "summary": "Update a person",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique id of the existing person",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "PersonDto with the updated person's data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PersonDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "People"
        ],
        "summary": "Delete a person",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique id of the existing person",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": { }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          }
        }
      }
    },
    "/carshop/v2/people/name": {
      "get": {
        "tags": [
          "People"
        ],
        "summary": "Get person by name",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name to be search for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": { }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CarDto": {
        "required": [
          "id",
          "maker",
          "model",
          "year",
          "price",
          "imageUrl",
          "personId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "maker": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "personId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        }
      },
      "PersonDto": {
        "required": [
          "id",
          "firstName",
          "lastName",
          "email",
          "phone"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Cars"
    },
    {
      "name": "People"
    }
  ]
}